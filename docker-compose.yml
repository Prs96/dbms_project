services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: college-pis-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dbms-college-PIS}
      POSTGRES_DB: dbmsS5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - college-pis-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: college-pis-backend
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD:-dbms-college-PIS}@postgres:5432/dbmsS5
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dbms-college-PIS}
      - PORT=3000
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - college-pis-network

  # Frontend (React + Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: college-pis-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - college-pis-network

volumes:
  postgres_data:

networks:
  college-pis-network:
    driver: bridge
